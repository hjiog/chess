import{S as t,a as s,i as o}from"./utils.3107c60b.js";import"./vendor.5eae4cb2.js";const e=[];function n(t){const{originPostion:s,currentPostion:o,back:n,chessboardMap:i}=t,r=i[s.top][s.left],a=i[o.top][o.left];if(i[o.top][o.left]=r,n){const t=e.pop();i[s.top][s.left]=t||0}else e.push(a),i[s.top][s.left]=0}const i=(t,o)=>o?t&s.red:t&s.black,r=(e,n)=>{const r=t.isPlayFirst?!e:e;return-1!==n.findIndex(((t,e)=>-1!==t.findIndex(((t,a)=>{if(i(t,!r)){return-1!==o[t].getAllMovePosition({top:e,left:a,chessType:t,ChessBoardMap:n}).findIndex((([t,o])=>n[t][o]&s.j))}return!1}))))},a=new WeakMap;function c(t){return a.has(t)?a.get(t):0}function l(t,s){if(a.has(t)){const o=a.get(t)+s*s;a.set(t,o)}else a.set(t,s*s)}const h=[0,1,4,13,40,121,364,1093];class f{constructor(s,e){this.mvs=[],this.vls=[],this.index=0;const n=function(t,s){let e=[];return s.forEach(((n,r)=>{n.forEach(((n,a)=>{if(i(n,t)){const t=o[n].getAllMovePosition({top:r,left:a,chessType:n,ChessBoardMap:s});e=e.concat(t.map((t=>({originPostion:{top:r,left:a},currentPostion:{top:t[0],left:t[1]}}))))}}))})),e}(t.isPlayFirst?!s:s,e);for(let t=0;t<n.length;t++){const s=n[t];this.mvs.push(s),this.vls.push(c(s))}!function(t,s){let o=1;for(;h[o]<t.length;)o++;o--;for(;o>0;){const e=h[o];for(let o=e;o<t.length;o++){const n=t[o],i=s[o];let r=o-e;for(;r>=0&&i>s[r];)t[r+e]=t[r],s[r+e]=s[r],r-=e;t[r+e]=n,s[r+e]=i}o--}}(this.mvs,this.vls)}next(){if(this.index<this.mvs.length){const t=this.mvs[this.index];return this.index++,t}}}function p(e){const{depth:i,chessboardMap:a,searchResult:c}=e;let{valAlpha:h,valBeta:u}=e;const d=0==(1&i);if(0===i)return function(e){let n=0;return t.isPlayFirst?e.forEach(((t,e)=>{t.forEach(((t,i)=>{t&s.red?n-=o[t].valueMap[e][i]:t&s.black&&(n+=o[t].valueMap[e][i])}))})):e.forEach(((t,e)=>{t.forEach(((t,i)=>{t&s.red?n+=o[t].valueMap[e][i]:t&s.black&&(n-=o[t].valueMap[e][i])}))})),n}(a);const P=new f(d,a);let v=0,g=!1;for(let t=P.next();t;t=P.next()){const{originPostion:o,currentPostion:e}=t;if(a[e.top][e.left]&s.j)return 4===i&&(c.currentPostion=e,c.originPostion=o),d?99999:-99999;if(n({originPostion:o,currentPostion:e,back:!1,chessboardMap:a}),g=r(d,a),g)n({originPostion:e,currentPostion:o,back:!0,chessboardMap:a});else if(v=p({valAlpha:h,valBeta:u,depth:i-1,chessboardMap:a,searchResult:c}),n({originPostion:e,currentPostion:o,back:!0,chessboardMap:a}),d){if(v>h&&(h=v,4===i&&(c.currentPostion=e,c.originPostion=o),h>=u))return l(t,i),u}else if(v<u&&(u=v,h>=u))return l(t,i),h}return d?h:u}const u=self;u.addEventListener("message",(s=>{console.log("ai start,recieve data:",s.data),t.isPlayFirst=s.data.isPlayFirst;const o={originPostion:{top:-1,left:-1},currentPostion:{top:-1,left:-1}},e=p({valAlpha:-99999,valBeta:99999,depth:4,chessboardMap:s.data.ChessBoardMap,searchResult:o});console.log(o,"value:",e),u.postMessage(o)}));
